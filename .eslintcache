[{"C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\index.tsx":"1","C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\App.tsx":"2","C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\components\\navbar.tsx":"3","C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\components\\TodoForm.tsx":"4","C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\components\\TodoList.tsx":"5"},{"size":256,"mtime":1606905993618,"results":"6","hashOfConfig":"7"},{"size":173,"mtime":1606910023781,"results":"8","hashOfConfig":"7"},{"size":512,"mtime":1606844898460,"results":"9","hashOfConfig":"7"},{"size":1172,"mtime":1606897443414,"results":"10","hashOfConfig":"7"},{"size":1287,"mtime":1606908923958,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"va5dtg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\index.tsx",[],["24","25"],"C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\App.tsx",[],"C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\components\\navbar.tsx",[],"C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\components\\TodoForm.tsx",["26"],"import React, { useState, useRef } from 'react'\r\n\r\ninterface TodoFormProps {\r\n    onAdd(title: string): void\r\n}\r\n\r\nexport const TodoForm: React.FC<TodoFormProps> = (props) => {\r\n/*     const [title, setTtitle] = useState<string>('')\r\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTtitle(event.target.value)\r\n    } */\r\n    const ref = useRef<HTMLInputElement>(null)\r\n    const keyPressHandler = (event: React.KeyboardEvent) => {\r\n        if(event.key === 'Enter'){\r\n            props.onAdd(ref.current!.value)\r\n            ref.current!.value = ''\r\n            /* console.log(title)\r\n            setTtitle('') */\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"input-field mt2\">\r\n            <input \r\n            /* value={title}  */\r\n            ref={ref}\r\n            type=\"text\" \r\n            id=\"title\" \r\n            placeholder='Введите название дела'\r\n            /* onChange={changeHandler} */\r\n            onKeyPress={keyPressHandler}\r\n            />\r\n            <label htmlFor=\"title\" className='active'>Введите название дела</label>\r\n        </div>\r\n    ) \r\n        \r\n    \r\n}","C:\\Users\\agafo\\Desktop\\it-kam\\my-app\\src\\components\\TodoList.tsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":25},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]